name: build-flet
on:
  push:
    tags:
      - "v*"
env:
  VERSION: 1.1.0

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: "Create Release"
        run: gh release create ${{github.ref_name}} --draft --verify-tag --notes "Release ${{github.ref_name}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: create-release
    strategy:
      matrix:
        include:
          - runs-on: macos-latest
            flet-name: ${{ vars.APP_NAME }}
            binary-name: ${{ vars.APP_NAME }}.tar.gz
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.8' 
      - run: pip install -r requirements.txt
      - run: flet pack main.py --name ${{ matrix.flet-name }} --icon assets/icon.icns --product-name ${{ matrix.flet-name }} --product-version ${{ env.VERSION }} --copyright "${{ vars.COPYRIGHT }}"
      - name: "Linux/MacOS compress"
        run: tar zcvf ${{matrix.binary-name}} dist
      - name: "Upload Release"
        run: gh release upload ${{github.ref_name}} ${{matrix.binary-name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
