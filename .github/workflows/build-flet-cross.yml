name: build-flet-cross
on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: "Create Release"
        run: gh release create ${{github.ref_name}} --draft --verify-tag --notes "Release ${{github.ref_name}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  cross-build:
    needs: create-release
    strategy:
      matrix:
        include:
          - runs-on: macos-latest
            binary-name: ${{ vars.APP_NAME }}_macos.tar.gz
            target-platform: macos
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: pip install -r requirements.txt
      - name: "Install GStreamer libraries"
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      - run: flet build ${{ matrix.target-platform }} --output dist
      - name: "Linux/MacOS compress"
        if: runner.os != 'Windows'
        run: tar zcvf ${{matrix.binary-name}} dist
      - name: "Upload Release"
        run: gh release upload ${{github.ref_name}} ${{matrix.binary-name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
